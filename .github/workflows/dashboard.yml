name: CI/CD - Dashboard app

on:
  push:
    branches:
      - main
    paths:
      - "apps/dashboard/**"
  pull_request:
    branches:
      - main
    paths:
      - "apps/dashboard/**"

defaults:
  run:
    working-directory: apps/dashboard

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Install shared libs
        run: pnpm run prepare
        working-directory: ${{ github.workspace }}

      - name: TypeScript check
        run: pnpm tsc --noEmit

      - name: Run lint
        run: pnpm run lint --max-warnings=0

      - name: Build
        run: pnpm run build
        env:
          APP_FIREBASE_API_KEY: ${{ secrets.APP_FIREBASE_API_KEY }}
          APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.APP_FIREBASE_AUTH_DOMAIN }}
          APP_FIREBASE_PROJECT_ID: ${{ secrets.APP_FIREBASE_PROJECT_ID }}
          APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.APP_FIREBASE_STORAGE_BUCKET }}
          APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.APP_FIREBASE_MESSAGING_SENDER_ID }}
          APP_FIREBASE_APP_ID: ${{ secrets.APP_FIREBASE_APP_ID }}

      - name: Upload build artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: apps/dashboard/dist

  CD:
    needs: CI
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: apps/dashboard/dist

      - name: Delete build artifacts
        run: rm -rf apps/dashboard/dist

      - name: Setup AWS cli
        uses: shinyinc/action-aws-cli@1.1

      - name: Deploy on AWS S3 bucket
        run: aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_NAME }}/dashboard

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/dashboard/mf-manifest.json" "/dashboard/mf-stats.json" "/dashboard/@mf-types.d.ts" "/dashboard/@mf-types.zip"
